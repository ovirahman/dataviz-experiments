na.omit() %>%
mutate(diff = `2010` - `2000`, absdiff = abs(diff)) %>%
arrange(desc(absdiff)) -> emissions_diff
emissions_diff[1:10,] %>% select(-diff) %>%
gather(year, emissions, `2000`:`2010`) %>%
mutate(year = as.numeric(year)) -> emissions_top_ten
textcol <- "gray30"
labels_df <- filter(emissions_top_ten, year == 2010) %>%
left_join(
tibble(
country = c("Trinidad and Tobago", "Qatar", "United Arab Emirates", "Oman", "Bahrain", "Singapore", "Netherlands Antilles", "Kazakhstan", "Equatorial Guinea", "Kuwait"),
nudge_y = c(.1, .1, .1, .1, -.3, .1, .7, .1, .1, .1)
)
)
ggplot(filter(emissions_top_ten, year != 2005), aes(x = year, y = emissions)) +
geom_line(aes(group = country), color = "gray60") +
geom_point(color = "white", size = 10) +
geom_point(color = "#0072B2", size = 2)
ggplot(data = data, aes(x= data$type, y = data$value)) + geom_line(aes(group = name), col = "red") + geom_point(size = 4)
ggplot(data = data, aes(x= data$type, y = data$value)) + geom_line(aes(group = name), color = "red") + geom_point(size = 4)
data
data$name <- rep(c("A","B"),3)
ggplot(data = data, aes(x= data$type, y = data$value)) + geom_line(aes(group = name), color = "red") + geom_point(size = 4)
data
data$name <- rep("A",3), rep("B",3)
data$name <- c(rep("A",3), rep("B",3))
data
ggplot(data = data, aes(x= data$type, y = data$value)) + geom_line(aes(group = name), color = "red") + geom_point(size = 4)
data$name <- c(rep("A",3), rep("B",3), rep("C",2))
data$name <- c(rep("A",2), rep("B",2), rep("C",2))
data
ggplot(data = data, aes(x= data$type, y = data$value)) + geom_line(aes(group = name), color = "red") + geom_point(size = 4)
ggplot(data = data, aes(x= data$type, y = data$value)) + geom_line(aes(group = name), color = "black") + geom_point(size = 4)
data
plot(data$type, data$value)
plot(data$type, data$value, xlim = c("X","Y"))
plot(data$type, data$value, xlim = c(0,1))
plot(data$type, data$value)
data$type <- factor(data$type)
plot(data$type, data$value)
plot(data$type, data$value, type = "p")
plot(data$type, data$value, type = "l")
plot(data$type, data$value)
dotchart(data$type, data$value)
dotchart( data$value)
dotchart( data$value,data$type)
plot(data$type, data$value)
plot(data$type, data$value, type = "n")
plot(data$value, type = "n")
plot(data$value, type = "b")
plot(data$value, type = "p)
plot(data$value, type = "p")
plot(data$value, type = "a")
plot(data$value, type = "h")
plot(data$value)
plot(data$value~data$type)
ggplot(data = data, aes(x= data$type, y = data$value)) + geom_line(aes(group = name), color = "red") + geom_point(size = 4)
plot(data$value~data$type)
?plo
?plot
?graphics
library(help = "graphics")
plot(y = data$value)
plot(x = data$type, y = data$value)
sunflowerplot(data$value)
plot(x = data$type, y = data$value)
data
data$tl <- if(data$type == "x") 1 else 2
data
if(data$type == "x") 1 else 2
data$type == "x"
ifelse(data$type == "x")
ifelse(data$type == "x",1,2)
data$tl <- ifelse(data$type == "x",1,2)
plot(x = data$type, y = data$value)
plot(x = data$tl, y = data$value)
plot(x = data$tl, y = data$value, xlim(0,2))
plot(x = data$tl, y = data$value, xlim= (0,2))
plot(x = data$tl, y = data$value, xlim = (0,2))
plot(x = data$tl, y = data$value, xlim = c(0,2))
plot(x = data$tl, y = data$value, xlim = c(0,3))
plot(x = data$tl, y = data$value, xlim = c(0,3), xaxt = "n")
axis(1, at = c(1,2), labels = c("x", "y"))
points(groups = data$name)
lines(group = data$name)
lines(data$value)
(data$value[data$name == "A"])
lines(data$value[data$name == "A"])
lines(data$value[data$name == "A"])
(data$value[data$name == "A", data$type == "x"])
data
data <- data[-data$tl]
data
data <- data.frame(class = c(rep("A",2),rep("B",2),rep("C",2)))
data
data <- data.frame(class = c(rep("A",2),rep("B",2),rep("C",2)), type = rep(c("x","y"),2))
data <- data.frame(class = c(rep("A",2),rep("B",2),rep("C",2)), type = rep(c("x","y"),3))
data
data <- data.frame(class = c(rep("A",2),rep("B",2),rep("C",2)), type = rep(c("x","y"),3), value = c(6,7,8,2,4,7))
data
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point()
data
data <- data.frame(class = c(rep("A",2),rep("B",2),rep("C",2)), type = rep(c("x","y"),3), value = c(6,3,8,5,4,2))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point()
data <- data.frame(class = c(rep("A",2),rep("B",2),rep("C",2)), type = rep(c("x","y"),3), value = c(6,4,8,6,4,3))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3) + geom_line()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3) + geom_line(group = class)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3) + geom_line(aes(group = class))
data <- data.frame(class = c(rep("A",2),rep("B",2),rep("C",2)), type = rep(c("x","y"),3), value = c(6,4,8,6,4,5))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3) + geom_line(aes(group = class))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3) + geom_line(aes(group = class)) +theme_bw()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3, color = "wheat") + geom_line(aes(group = class)) +theme_bw()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3, color = "red") + geom_line(aes(group = class)) +theme_bw()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3, color = "red") + geom_line(aes(group = class)) +theme_light()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3, color = "red") + geom_line(aes(group = class)) +theme_bw()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3, color = "red") + geom_line(aes(group = class), color = "gray60") +theme_bw()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_point(size = 3, color = "#0072B2") + geom_line(aes(group = class), color = "gray60") +theme_bw()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 4, color = "#0072B2")+
theme_bw()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data$class,
aes(x = year + 0.45, y = emissions + nudge_y, label = country),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = type + 0.45, y = value + .1, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
scale_x_continuous(
limits = c(2000, 2020), breaks = c(2000, 2010),
labels = c("2000", "2010"),
expand = expand_scale(add = c(1, 0)),
name = NULL,
position = "top"
)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_point(aes(2,5))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = c(1,2) + 0.45, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = c(1,2) + 0.45, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ifelse(data$type == "x",1,2)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = ifelse(data$type == "x",1,2)+ 0.45, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = ifelse(data$type == "x",1,2)+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = rep(2,3)+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = rep(2,3)+ 0.05, y = value[type == "y"] + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = rep(2,3)+ 0.05, y = value[type == "y"] + 0, label = class[type == "y"]),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = ifelse(data$type == "x",1,2)+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = ifelse(type == "x",1,2)+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = rep(2,3)+ 0.05, y = value[[type == "y"]] + 0, label = class[[type == "y"]]),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = data,
aes(x = rep(2,3)+ 0.05, y = value[[type == "y"]] + 0, label = class[[type == "y"]]),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = subset(data, data$type == "y"),
aes(x = rep(2,3)+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
data <- data.frame(class = c(rep("A",2),rep("B",2),rep("C",2)), type = rep(c("x","y"),3), value = c(6,4,8,6,4,5))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = subset(data, data$type == "y"),
aes(x = rep(2,3)+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
data <- data.frame(class = c(rep("Class A",2),rep("Class B",2),rep("Class C",2)), type = rep(c("x","y"),3), value = c(6,4,8,6,4,5))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = subset(data, data$type == "y"),
aes(x = rep(2,3)+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
library(plotly)
ggplotly()
- data.frame(class = c(rep("Class A",2),rep("Class B",2),rep("Class C",2)), type = rep(c("x","y"),3), value = c(6,4,8,6,4,5))
ggplot
data <- data.frame(class = c(rep("Class A",2),rep("Class B",2),rep("Class C",2)), type = rep(c("x","y"),3), value = c(6,4,8,6,4,5))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = subset(data, data$type == "y"),
aes(x = rep(2,3)+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
data <- data.frame(class = c(rep("Class A",2),rep("Class B",2),rep("Class C",2)), type = rep(c("x","y"),3), value = c(6,4,8,6,4,5))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = subset(data, data$type == "y"),
aes(x = rep(2,3)+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
dim(data)
row(data)
data
d = subset(data, data$type == "y")
dim(d)
d
nrow(d)
data <- data.frame(class = c(rep("Class A",2),rep("Class B",2),rep("Class C",2)), type = rep(c("x","y"),3), value = c(6,4,8,6,4,5))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = subset(data, data$type == "y"),
aes(x = rep(2,nrow(data))+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
data <- data.frame(class = c(rep("Class A",2),rep("Class B",2),rep("Class C",2)), type = rep(c("x","y"),3), value = c(6,4,8,6,4,5))
ggplot(data, aes(x = data$type, y = data$value)) +
geom_line(aes(group = class), color = "gray60") +
geom_point(size = 6, color = "white")+
geom_point(size = 4, color = "#0072B2")+
theme_bw()+
geom_text(
data = subset(data, data$type == "y"),
aes(x = rep(2,nrow(subset(data, data$type == "y")))+ 0.05, y = value + 0, label = class),
family = "Myriad Pro",
size = 10/.pt,
hjust = 0)
library(leaflet)
addTiles(leaflet())
install.packages(""leaflet.extras"")
install.packages(leaflet.extras")
install.packages("leaflet.extras")
library(leaflet.extras)
addSearchOSM(addTiles(leaflet()))
addSearchOSM(addTiles(leaflet()))
addSearchFeatures(addTiles(leaflet()))
setwd("C:/Users/movir/Desktop/workspace/GITHUB/dataviz-experiments/bdmapshapefile")
dir
dir()
load("script.R")
library(sf)
map<-st_read("gadm36_BGD_shp/gadm36_BGD_1.shp")
str(map)
library(dplyr)
glimpse(map)
map$geometry[[1]]
map$geometry[[1]] %>% leaflet() %>% addPolygons()
map$geometry %>% leaflet() %>% addPolygons()
map<- st_read("bgd_admbnda_adm1_bbs_20180410/bgd_admbnda_adm1_bbs_20180410.shp")
map$geometry %>% leaflet() %>% addPolygons()
glimpse(map)
map$geometry %>% leaflet() %>% addTiles() %>% addPolygons()
library(sf)
library(tmap)
library(tmaptools)
library(leaflet)
library(dplyr)
map_dist <- st_read("bgd_admbnda_adm2_bbs_20180410/bgd_admbnda_adm2_bbs_20180410.shp")
district <- read.csv("Districts.csv")
district <- data.frame(District = district$District, Density = district$Pop.Density.in.2011)
district$District <- gsub(" District","",district$District)
district <- data.frame(ADM2_EN = district$District, Population_Density = district$Density)
map_and_data <- inner_join(map_dist, district)
tmap_mode("plot")
tm_shape(map_and_data) + tm_polygons("Population_Density",id = "ADM2_EN",palette = "Reds")
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons()
pal <- colorNumeric("Reds",domain = log(map_and_data$Population_Density))
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(Population_Density))
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)))
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1)
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1)
pal <- colorNumeric("YlGn",domain = log(map_and_data$Population_Density))
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1)
pal <- colorNumeric("Reds",domain = log(map_and_data$Population_Density))
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1)
pal <- colorNumeric("Reds",domain = (map_and_data$Population_Density))
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal((Population_Density)), fillOpacity = 1, weight = 1)
pal <- colorNumeric("Reds",domain = log(map_and_data$Population_Density))
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1)
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1. label =map_and_data$ADM2_EN)
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1. label = ~ADM2_EN)
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1. label = ~ADM2_EN)
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1, label = ~ADM2_EN)
names(map_and_data)
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1, label = ~paste0(ADM2_EN,Population_Density))
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1, label = ~paste0(ADM2_EN,": ",Population_Density, "per sq km"))
map_and_data %>% leaflet() %>% addTiles() %>% addPolygons(color = ~pal(log(Population_Density)), fillOpacity = 1, weight = 1, label = ~paste0(ADM2_EN,": ",Population_Density, " per sq km"))
slotNames(map_and_data)
slotNames(map)
class(map)
library(sp)
class(map)
library(rgdal)
iris
library(ggplot2)
str(iris)
iri %>% ggplot(aes(x= Specis)) +geom_bar()
iris %>% ggplot(aes(x= Specis)) +geom_bar()
iris %>% ggplot(aes(x= Species)) +geom_bar()
iris %>% ggplot(aes(x= Species)) +geom_polar()
iris %>% ggplot(aes(x= Species)) +coord_polar()
iris %>% ggplot(aes(x= Species, fill = Species)) +coord_polar()
iris %>% ggplot(aes(x= Species, fill = Species)) +coord_polar()
iris %>% ggplot(aes(x= Species, fill = Species)) +coord_polar()
iris %>% ggplot(aes(x= Species, fill = Species))+geom_bar +coord_polar()
iris %>% ggplot(aes(x= Species, fill = Species))+geom_bar() +coord_polar()
iris %>% ggplot(aes(x= Species, fill = Species))+geom_bar() +coord_polar(theta = "x")
iris %>% ggplot(aes(x= Species, fill = Species))+geom_bar() +coord_polar(theta = "y")
iris %>% ggplot(aes(x= Species, fill = Species))+geom_bar() +coord_polar(theta = "x")
iris %>% ggplot(aes(x= Species, fill = Species))+geom_bar() +coord_polar()
iris %>% ggplot(aes(x= Species, fill = Species))+geom_bar(color = "white") +coord_polar()
iris %>% ggplot(aes(x= Species, fill = Species))+geom_bar(color = "white") +coord_polar() +theme_void()
iris %>% ggplot(aes(x= Species, fill = Species))+geom_bar(color = "white") +coord_polar() +theme_void()
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white") +coord_polar() +theme_void()
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white") +coord_polar(theta = "x") +theme_void()
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white") +coord_polar(theta = "y") +theme_void()
pie
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white") +coord_polar(theta = "y") +theme_void()
pie(iris$Species)
pie(table(iris$Species))
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white") +coord_polar(theta = "y") +theme_void()
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white") +coord_polar(theta = "y")
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white") +coord_polar(theta = "y") +theme_void()
iris %>% ggplot(aes(x= 1, fill = Species))+coord_polar(theta = "y") +theme_void()
iris %>% ggplot(aes(x= 1, fill = Species))+coord_polar(theta = "y") +theme_void()
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white") +coord_polar(theta = "y") +theme_void()
wafle
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white")
iris %>% ggplot(aes(x= 1, fill = Species))+geom_col(color = "white")
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white")
iris %>% ggplot(aes(x= 1, fill = Species))+geom_col(color = "white") +coord_polar(theta = "y") +theme_void()
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white") +coord_polar(theta = "y") +theme_void()
iris %>% ggplot(aes(x= 1, fill = Species))+geom_bar(color = "white") +theme_void()
