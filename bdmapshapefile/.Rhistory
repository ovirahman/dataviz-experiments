getwd()
plot(iris)
plot(iris)
head(iris)
fit <- lm(Sepal.Length~Species, iris)
fi
fit
plot(fit)
plot(fit)
units()
unit
install.packages("tidyverse")
library()
library(ggplot2)
qplot(Sepal.Length, Sepal.Width, iris)
qplot(Sepal.Length, Sepal.Width, data = iris)
theme_set(theme_classic())
qplot(Sepal.Length, Sepal.Width, data = iris)
qplot(Sepal.Length, Sepal.Width, data = iris) + theme_bw()
qplot(Sepal.Length, Sepal.Width, data = iris) + theme_tufte()
ggthemes
install.packages(ggthemes)
install.packages("ggthemes")
library(ggthemes)
qplot(Sepal.Length, Sepal.Width, data = iris) + ggthemes::bank_slopes()
qplot(Sepal.Length, Sepal.Width, data = iris) + ggthemes::canva_pal()
qplot(Sepal.Length, Sepal.Width, data = iris) + canva_pal()
qplot(Sepal.Length, Sepal.Width, data = iris) + canva_pal
qplot(Sepal.Length, Sepal.Width, data = iris) +ggthemes::theme_clean()
qplot(Sepal.Length, Sepal.Width, data = iris) +ggthemes::theme_excel()
qplot(Sepal.Length, Sepal.Width, data = iris) +ggthemes::theme_tufte()
qplot(Sepal.Length, Sepal.Width, data = iris, color = Species) +ggthemes::theme_tufte()
qplot(Sepal.Length, Sepal.Width, data = iris, color = Species)
qplot(Sepal.Length, Sepal.Width, data = iris, color = Species) +ggthemes::theme_tufte()
qplot(Sepal.Length, Sepal.Width, data = iris, color = Species)
qplot(Sepal.Length, Sepal.Width, data = iris, color = Species) + theme_fivethirtyeight()
qplot(Sepal.Length, Sepal.Width, data = iris, color = Species) + theme_wsj()
theme_wsj
colorhex
ggthemes::ggthemes_data$wsj$bg[color]
ggthemes::ggthemes_data$wsj$bg
# Add column with unique ids (don't need to change)
iris$Flower <- 1:nrow(iris)
# Fill in the ___ to produce to the correct iris.wide dataset
iris.wide <- iris %>%
gather(key, value, -Species, -Flower) %>%
separate(key, c("Part", "Measure"), "\\.") %>%
spread(Measure, value)
library(tidyr)
library(tidyverse)
# Add column with unique ids (don't need to change)
iris$Flower <- 1:nrow(iris)
# Fill in the ___ to produce to the correct iris.wide dataset
iris.wide <- iris %>%
gather(key, value, -Species, -Flower) %>%
separate(key, c("Part", "Measure"), "\\.") %>%
spread(Measure, value)
ggplot(iris.wide, aes(Length, Width, color = Part))+
geom_point()
ggplot(iris.wide, aes(Length, Width, color = Part))+
geom_jitter()
ggplot(iris.wide, aes(Length, Width, color = Part))+
geom_jitter(alpha = 0.7)
ggplot(iris.wide, aes(Length, Width, color = Part))+
geom_jitter(alpha = 0.7)
ggplot(iris.wide, aes(Length, Width, ccolorol = Part))+
geom_jitter(alpha = 0.7)
ggplot(iris.wide, aes(Length, Width, color = Part))+
geom_jitter(alpha = 0.7)
ggplot(iris.wide, aes(Length, Width, color = Part))+
geom_jitter(alpha = 0.7)+
scale_color_brewer(pallete = "Set1")
ggplot(iris.wide, aes(Length, Width, color = Part))+
geom_jitter(alpha = 0.7)+
scale_color_brewer(palette = "Set1")
ggplot(iris.wide, aes(Length, Width, color = Part))+
geom_jitter(alpha = 0.7)+
scale_color_brewer(palette = "Set1")+
coord_fixed()
p<- ggplot(iris.wide, aes(Length, Width, color = Part))+
geom_jitter(alpha = 0.7)+
scale_color_brewer(palette = "Set1")+
coord_fixed()
p + facet_grid()
p + facet_grid(Species)
p + facet_grid(~Species)
vars
p + facet_grid(.~Species)
p + facet_grid(cols = ~Species)
p + facet_grid(cols = vars(Species))
.
theme_set(theme_classic())
p<- ggplot(iris.wide, aes(Length, Width, color = Part))+
geom_jitter(alpha = 0.7)+
scale_color_brewer(palette = "Set1")+
coord_fixed()
p + facet_grid(.~Species)
plot(runif(100))
hist(runif(100))
RColorBrewer::display.brewer.all()
viridisLite::viridis.map
viridis::plasma()
install.packages("tigris")
setwd("~/Downloads/bgd_trs_railways_lged")
setwd("~/Downloads/bgd_trs_railways_lged")
setwd("~/Downloads")
sf::st_read("bgd_trs_railways_lged/","bgd_trs_railways_lged")
map<-sf::st_read("bgd_trs_railways_lged/","bgd_trs_railways_lged")
plot(map)
library(tmap)
tm_shape(map)
str(map)
tm_shape(map) + tm_polygons()
tm_shape(map) + tm_lines()
tm_shape(map) + tm_lines()
tm_shape(map) + tm_lines(col = "RAIL_ID")
tm_shape(map) + tm_lines()
tmap_mode("view")
tm_shape(map) + tm_lines()
tm_shape(map) + tm_lines(lwd = 2)
setwd("~/Desktop/GitHub/dataviz-experiments/dataviz-experiments/bdmapshapefile")
country <- st_read("bgd_admbnda_adm2_bbs_20180410", "bgd_admbnda_adm2_bbs_20180410")
tm_shape(map) +tm_polygons(country)+ tm_lines(lwd = 2)
country
tm_shape(country)+tm_shape(map)+ tm_lines(lwd = 2)
tm_shape(country)+tm_polygons()+tm_shape(map)+ tm_lines(lwd = 2)
tmap_mode("plot")
tm_shape(country)+tm_polygons()+tm_shape(map)+ tm_lines(lwd = 2)
tm_shape(country)+tm_polygons()+tm_shape(map)+ tm_lines(lwd = 2.5, col = "tomato")
tm_shape(country)+tm_borders()+tm_shape(map)+ tm_lines(lwd = 2.5, col = "tomato")
tm_shape(country, style = "cobult")+tm_borders()+tm_shape(map)+ tm_lines(lwd = 2.5, col = "tomato")
tm_shape(country, style = "cobult")+tm_borders()+tm_shape(map)+ tm_lines(lwd = 2.5, col = "tomato") + tm_style("cobalt")
?tm_style
tm_shape(country)+tm_borders()+tm_shape(map)+ tm_lines(lwd = 2.5, col = "tomato") + tm_style("cobalt")
tm_shape(country)+tm_borders(col = "white")+tm_shape(map)+ tm_lines(lwd = 2.5, col = "tomato") + tm_style("cobalt")
tm_shape(country)+tm_borders(col = "grey60")+tm_shape(map)+ tm_lines(lwd = 2.5, col = "tomato") + tm_style("cobalt")
tm_shape(country)+tm_borders(col = "grey60")+tm_shape(map)+ tm_lines(lwd = 2.5, col = "tomato") +
tm_style("cobalt")
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "tomato") +
tm_style("cobalt")
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "red") +
tm_style("cobalt")
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "red") +
tm_style("classic")
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "tomato") +
tm_style("bw")
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "red") +
tm_style("bw")
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "red") +
tm_style("beaver")
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "red") +
tm_style("beaver")+
tm_layout(
)
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "red") +
tm_style("beaver")+
tm_layout(
outer.margins = 0
)
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "red") +
tm_style("beaver")+
tm_layout(
inner.margins = 0
)
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "steelblue") +
tm_style("beaver")+
tm_layout(
)
colors()["sepia"]
colors()["sepiha"]
colors()["sephia"]
colors()["red"]
colors()["red".]
colors()["red",]
colors()
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "steelblue") +
tm_style("classic")+
tm_layout(
)
tm_shape(country)+tm_borders(col = "grey60")+
tm_style("classic")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "steelblue")
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "steelblue") +
tm_style("cobult")+
tm_layout(
)
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "steelblue") +
tm_style("cobalt")+
tm_layout(
)
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "steelblue") +
tm_style("cobalt")
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "red") +
tm_style("cobalt")
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "red") +
tm_layout(
bg.color = "wheat"
)
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "red") +
tm_layout(
bg.color = "wheat"
)
tm_shape(country)+tm_borders(col = "grey60")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "steelblue") +
tm_style("cobalt")
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "steelblue") +
tm_layout(
bg.color = "wheat"
)
RColorBrewer::display.brewer.all()
RColorBrewer::brewer.pal(1, "Set1")
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat"
)
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat"
)
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C",legend.col.show = T) +
tm_layout(
bg.color = "wheat"
)
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat"
)
tmap_mode("view")
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat"
)
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat",
)
tmap_mode("plot")
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat",
)
?tm_layout
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat",
)+
tm_compass()
tm_shape(country)+tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat",
)+
tm_compass(position = c("right", "top"))
tm_legend()
tm_shape(country)+
tm_borders(col = "grey30")+
tm_shape(map, title = "adasda")+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat",
)+
tm_compass(position = c("right", "top"))
tm_shape(country)+
tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat",
title = "Bangladesh Railway Route Map"
)+
tm_compass(position = c("right", "top"))
tm_shape(country)+
tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat",
title = "Bangladesh Railway Route Map",
title.position = c("left","bottom")
)+
tm_compass(position = c("right", "top"))
tm_shape(country)+
tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat",
title = "Bangladesh Railway Route Map\n\n",
title.position = c("left","bottom")
)+
tm_compass(position = c("right", "top"))
tm_shape(country)+
tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat",
title = "Bangladesh Railway Route Map\n\n",
title.position = c("left","bottom"),
title.color = "white"
)+
tm_compass(position = c("right", "top"))
tm_shape(country)+
tm_borders(col = "grey30")+
tm_shape(map)+
tm_lines(lwd = 2.5, col = "#E41A1C") +
tm_layout(
bg.color = "wheat",
title = "Bangladesh Railway Route Map\n\n",
title.position = c("left","bottom"),
title.color = "grey10"
)+
tm_compass(position = c("right", "top"))
