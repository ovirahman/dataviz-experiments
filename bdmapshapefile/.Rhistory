xyplot(Life.Exp ~ Income | region, data = state, )
xyplot(Life.Exp ~ Income | region, data = state, layout= c(1,4))
xyplot(Life.Exp ~ Income | region, data = state, layout= c(4,1))
xyplot(Life.Exp ~ Income | region, data = state
)
xyplot(Life.Exp ~ Income | region, data = state, )
xyplot(Life.Exp ~ Income | region, data = state )
xyplot(Life.Exp ~ Income | region, data = state )
xyplot(Life.Exp ~ Income | region, data = state)
state$Life.Exp
state$region
state.x77
state$region
library(ggplot2)
mpg
class(mpg)
qplot(displ, hwy, data = mpg)
airquality
head(airquality)
str(airquality)
boxplot(Ozone~Month,  airquality)
airquality <- transform(airquality, Month = factor(Month))
boxplot(Ozone~Month,  airquality)
str(airquality)
boxplot(Ozone~Month,  airquality)
boxplot(Ozone~Month,  airquality, pch = "x")
boxplot(Ozone~Month,  airquality, pch = "d")
boxplot(Ozone~Month,  airquality, pch = "o")
boxplot(Ozone~Month,  airquality, pch = "xxx")
boxplot(Ozone~Month,  airquality, pch = "abc")
boxplot(Ozone~Month,  airquality, pch = "*")
boxplot(Ozone~Month,  airquality, pch = "+")
colors
colors()
barplot(c(1:10))
barplot(c(1:10))
colors()
colors()[1:10]
barplot(c(1:10), col = colors()[1:10])
barplot(c(1:100), col = colors()[1:100])
barplot(c(1:100), col = colors()[1:657])
barplot(c(1:657), col = colors()[1:657])
barplot(rep(1,10), col = colors()[1:657])
barplot(rep(1,657), col = colors()[1:657])
barplot(rep(1,100), col = colors()[1:657])
barplot(rep(1,50), col = colors()[1:657])
barplot(rep(1,50), col = colors()[100:150])
barplot(rep(1,50), col = colors()[150:250])
barplot(rep(1,50), col = colors()[200:250])
plot(c(1:100))
plot(c(1:100), col = colors()[1:00])
barplot(rep(1,50), col = colors()[200:250])
barplot(rep(1,50), col = colors()[600:650])
colors(distinct = T)
barplot(c(1,50), col = colors()[600:650])
barplot(c(1:50), col = colors()[600:650])
barplot(c(2:51), col = colors()[600:650])
barplot(c(5:55), col = colors()[600:650])
par(bg = "wheat")
barplot(c(5:55), col = colors()[600:650])
barplot(c(5:55), col = colors()[600:650])
par(bg = "wheat")
barplot(c(5:55), col = colors()[600:650])
sample(1:50)
sample(1,50)
sample(c(1:50))
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
sample(c(1:50))
sample(c(1:50))
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
barplot(c(5:55), col = colors()[sample(c(1:650), 50)])
par("col")
par("mfrow")
par("bg")
par("mar")
plot(c(1:100), c(120:220))
plot(c(1:100), c(121:220))
plot(c(1:100), c(1:100))
head(mtcars)
airmiles
airquality
with(airquality, plot(Ozone, solar.R))
head(airquality)
with(airquality, plot(Ozone, Solar.R))
with(airquality, plot(Ozone, Solar.R))
text("hello")
text("hello", x = 100, y = 100)
text("o", x = 100, y = 100)
text("o", x = 100, y = 100)
lines(c(50,200), c(100,100))
lines(c(50,200))
lines(x = 50,100,150, 150)
lines(x = c(50,100), y= c(200,100))
with(airquality, plot(Ozone, Solar.R))
lines(x = c(50,100), y= c(200,100))
text("hello", x = 100, y = 100)
with(airquality, lines(Ozone, Solar.R))
with(airquality, lines(Wind, Ozone))
with(airquality, lines(Wind, Ozone))
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone), col = airquality$Month)
with(airquality, plot(Wind, Ozone), col = Month)
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "red"))
with(subset(airquality, Month != 5), points(Wind, Ozone, col = "blue"))
with(airquality, plot(Wind, Ozone, type = "n"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "red"))
with(subset(airquality, Month != 5), points(Wind, Ozone, col = "blue"))
legend
legend("topright")
legend("topright", legend = c("May", "Other Months"))
legend("topright", legend = c("May", "Other Months"))
legend("topright", legend = c("May", "Other Months"), col = ("red", "blue"))
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"))
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"))
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 1)
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 2)
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 3)
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 4)
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 0)
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 1)
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 10)
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 1)
legend("right", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 1)
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 1)
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"))
legend("topright", legend = c("May", "Other Months"), col = c("red", "blue"), pch = 1)
legend("right", legend = c("May", "Other Months"))
legend("right", legend = c())
legend("right", legend = c(""))
legend("right", legend = c("Stop"))
legend("right", legend = c("t"))
legend("right", legend = c("twwwqqqq"))
legend("right", legend = c("      "))
legend("right", legend = c("          "))
legend("right", legend = c("              "))
legend("right", legend = c("                  "))
legend("right", legend = c("                        "))
legend("right", legend = c("                        ","                        "))
with(airquality, plot(Wind, Ozone, main = "Ozone and Winf", pch = 20))
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd = 2)
model
par(mfrow = c(1,2))
with(airquality, {
plot(Wind, Ozone)
plot(Solar.R, Ozone)
})
mtext("Hello", outer = T)
with(airquality, {
plot(Wind, Ozone)
plot(Solar.R, Ozone)
mtext("Hello", outer = T)
})
with(airquality, {
plot(Wind, Ozone)
plot(Solar.R, Ozone)
mtext("Hello this sis asdasda", outer = T)
})
par(mfrow = c(1,2), oma = c(0,0,2,0))
with(airquality, {
plot(Wind, Ozone)
plot(Solar.R, Ozone)
mtext("Hello this sis asdasda", outer = T)
})
with(airquality, {
plot(Wind, Ozone)
plot(Solar.R, Ozone)
mtext("Hello this is asdasda", outer = T)
})
mtext("Outer", outer = T)
plot(rnorm(100), rnorm(100))
plot(rnorm(100), rnorm(100))
par(mfrow = C(1,1))
par(mfrow = C(1,1))
par(mfrow = (1,1))
par(mfrow = c(1,2) )
par(mfrow = c(1,1) )
plot(rnorm(100), rnorm(100))
plot(rnorm(100), rnorm(100), pch = 20)
pch
example("plot")
example()
example(lines)
example("points")
example("points")
library(lattice)
xyplot(Ozone ~ Wind, data = airquality)
title("this is the title")
xyplot(Ozone ~ Wind | month, data = airquality)
xyplot(Ozone ~ Wind | Month, data = airquality)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
xyplot(Ozone ~ Wind | factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | factor(Month), data = airquality, layout = c(1,5))
xyplot(Ozone ~ Wind | factor(Month), data = airquality, layout = c(3,2))
xyplot(Ozone ~ Wind | factor(Month), data = airquality, layout = c(3,2))
xyplot(Ozone ~ Wind | factor(Month), data = airquality, layout = c(3,2))
xyplot(Ozone ~ Wind | factor(Month), data = airquality, layout = c(3,2))
p <- plot(rnorm(100), rnorm(100+rnorm(100)))
p
p
print(p)
p <- plot(rnorm(100), rnorm(100+rnorm(100)))
library(ggplot2)
mpg
class(mpg)
str(mog)
str(mpg)
qplot(displ, hwy, data = mpg)
title("hello world")
points(4,20)
title("hello world")
title("hello world")
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, colors = drv)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, col = drv) + geom = ("point")
qplot(displ, hwy, data = mpg, col = drv, geom = ("point"))
qplot(displ, hwy, data = mpg, col = drv, geom = ("point", "smooth"))
qplot(displ, hwy, data = mpg, col = drv, geom = c("point", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(hwy)
qplot(hwy, data = MPG)
qplot(hwy, data = mpg)
qplot(hwy, data = mpg, fill - drv)
qplot(hwy, data = mpg, fill = drv)
qplot(hwy, data = mpg, ccolor = drv)
qplot(hwy, data = mpg, color = drv)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, facets  = drv)
qplot(displ, hwy, data = mpg, facets  = .~drv)
qplot(displ, hwy, data = mpg, facets  = drv.~)
qplot(hwy, data = mpg, fill = drv)
qplot(hwy, data = mpg, fill = drv.~)
qplot(hwy, data = mpg, facets = drv.~)
qplot(hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = 3~drv)
qplot(hwy, data = mpg, facets = 3~drv)
qplot(hwy, data = mpg, facets = 4~drv)
qplot(hwy, data = mpg, facets = ~drv)
qplot(hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~.)
qplot(hwy, data = mpg, color = drv)
qplot(hwy, data = mpg, color = drv, geom = "density")
qplot(hwy, data = mpg, color = drv, geom = "density")
qplot(log(hwy), data = mpg, color = drv, geom = "density")
qplot(log(hwy), data = mpg, color = drv, geom = "density")
qplot(hwy, data = mpg, color = drv, geom = "density")
qplot(log(hwy), data = mpg, color = drv, geom = "density")
qplot(log(hwy), data = mpg, color = drv, geom = "density")
qplot(hwy, data = mpg, color = drv, geom = "density")
qplot(hwy, data = mpg, color = drv, geom = "density")
qplot(log(hwy), data = mpg, color = drv, geom = "density")
qplot(log(hwy), data = mpg, shape = drv, geom = "density")
qplot(log(hwy), data = mpg, col  = drv, geom = "density")
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, col = drv) + geom_smooth(method = lm)
qplot(displ, hwy, data = mpg, col = drv) + geom_smooth(method = "lm")
qplot(displ, hwy, data = mpg, facets = .~drv) + geom_smooth(method = "lm")
hist(c(1,2,3,4))
hist(c(1,2,3,4,5,6))
hist(c(1,2,3,4,5,6,100))
hist(c(1,2,3,4,5,6,100))
hist(c(1,2,3,4,5,6,100), breaks =  5)
hist(c(1,2,3,4,5,6,100), breaks =  100)
hist(c(1,2,3,4,5,6,100), breaks = 50)
hist(rnorm(100))
hist(rnorm(100), breaks = 3)
hist(rnorm(100), breaks = 1000)
hist(rnorm(100), breaks = 100)
hist(rnorm(1000), breaks = 1000)
hist(rnorm(1000), breaks = 100)
hist(rnorm(1000), breaks = 10)
hist(rnorm(1000))
hist(rnorm(10))
hist(log(rnorm(10)))
hist(c(1,1,1,1,2,2,2,2,2,2,4,3,3,3,3,4,4,4,5,6,7,8,9,10))
hist(log(c(1,1,1,1,2,2,2,2,2,2,4,3,3,3,3,4,4,4,5,6,7,8,9,10)))
dbinom(10,2, 0.56)
dbinom(2,10, 0.56)
dbinom(20,100, 0.56)
dbinom(6,100, 0.56)
dbinom(60,100, 0.56)
dbinom(6,10, 0.56)
dbinom(56,100, 0.56)
dbinom(56,100, 0.56)
dbinom(56,100, 0.56)
dbinom(60,100, 0.56)
dbinom(50,100, 0.56)
dbinom(2,3,0.51)
pnorm(34,mean = 24,sd = 4,lower.tail = F)
dbinom(2,3,0.51)
dbinom(92,100,0.9)
dbinom(35,3000000,0.00001)
sum(dbinom(35:3000000,3000000,0.00001))
t <- seq(0, 2*pi, length.out = 50)
t
x <- sin(t)
y <- cos(t)
plot
plot(x,y)
library(ggplot2)
# Defining the number of points
points <- 500
# Defining the Golden Angle
angle <- pi * (3 - sqrt(5))
t <- (1:points) * angle
x <- sin(t)
y <- cos(t)
df <- data.frame(t, x, y)
# Make a scatter plot of points in a spiral
p <- ggplot(df, aes(x*t, y*t))
p + geom_point()
# Defining the number of points
points <- 500
# Defining the Golden Angle
angle <- pi * (3 - sqrt(5))
t <- (1:points) * angle
x <- sin(t)
y <- cos(t)
df <- data.frame(t, x, y)
# Make a scatter plot of points in a spiral
p <- ggplot(df, aes(x*t, y*t))
p + geom_point() +theme_light()
# Defining the number of points
points <- 500
# Defining the Golden Angle
angle <- pi * (3 - sqrt(5))
t <- (1:points) * angle
x <- sin(t)
y <- cos(t)
df <- data.frame(t, x, y)
# Make a scatter plot of points in a spiral
p <- ggplot(df, aes(x*t, y*t))
p + geom_point() +theme_minimal()
# Defining the number of points
points <- 500
# Defining the Golden Angle
angle <- pi * (3 - sqrt(5))
t <- (1:points) * angle
x <- sin(t)
y <- cos(t)
df <- data.frame(t, x, y)
# Make a scatter plot of points in a spiral
p <- ggplot(df, aes(x*t, y*t))
p + geom_point() +theme_dark()
HMF <- read.csv("C:/Users/movir/Downloads/HMF.csv")
View(HMF)
#Question 1
t.test(HMF$increase, conf.level = 0.9)
#Question 2
N <- length(HMF$increase)
set.seed(1234)
nboots <- 1000
boot.result <- numeric(nboots)
for(i in 1:nboots)
{
boot.samp <- sample(HMF$increase, N, replace = T)
boot.result[i] <- mean(boot.samp)
}
hist(boot.result)
boxplot(boot.result)
#Question 3
xbar <- mean(HMF$increase)
Tstar <- numeric(nboots)
for(i in 1:nboots)
{
boot.samp <- sample(HMF$increase, N, replace = T)
Tstar[i] <- mean(boot.samp)
}
quantile(Tstar, c(0.075, 0.925))
#Question 4
HMF$end <- HMF$start + HMF$increase
t.test(HMF$increase, conf.level = 0.9)
N <- length(HMF$increase)
set.seed(1234)
nboots <- 1000
boot.result <- numeric(nboots)
for(i in 1:nboots)
{
boot.samp <- sample(HMF$increase, N, replace = T)
boot.result[i] <- mean(boot.samp)
}
hist(boot.result)
boxplot(boot.result)
hist(boot.result)
prnorm
pnorm
qnorm
pt
pnorm(2)
pnorm(2227)
qnorm(2)
pnorm(0.81)
pnorm(0.81, lower.tail = F)
pnorm(0.6078, lower.tail = F)
pnorm(0.6078, lower.tail = F) * 2
pnorm(0.3039, lower.tail = F) * 2
pnorm(0.303944, lower.tail = F) * 2
pnorm(0.303944, lower.tail = F)
pnorm(1.82375, lower.tail = F) * 2
pnorm(1.82375052207, lower.tail = F) * 2
qnorm(0.98)
qnorm(0.95)
qnorm(0.05)
qnorm(0.025)
qnorm(0.01)
setwd("C:/Users/movir/Desktop/workspace/GITHUB/dataviz-experiments/bdmapshapefile")
library(sf)
library(tmap)
library(tmaptools)
library(leaflet)
library(dplyr)
map <- st_read("bgd_admbnda_adm4_bbs_20180410/bgd_admbnda_adm4_bbs_20180410.shp")
tm_shape(map) + tm_polygons(palette = "Greens")
str(map)
map$ADM2_EN
map2 <- filter(map, ADM2_EN == "Sunamganj")
tm_shape(map2) + tm_polygons(palette = "Greens")
tmap_mode("view")
tm_shape(map2) + tm_polygons(palette = "Greens")
tm_shape(map2) + tm_polygons(id = "ADM4_EN")
tm_shape(map2) + tm_polygons("ADM4_EN",id = "ADM4_EN")
tm_shape(map2) + tm_polygons("ADM4_EN",id = "ADM4_EN") +tm_legend()
tm_shape(map2) + tm_polygons("ADM4_EN",id = "ADM4_EN", legend.show = F)
str(map)
tm_shape(map2) + tm_polygons("ADM4_EN",id = "ADM4_EN", legend.show = F)
tm_shape(map2) + tm_polygons(c("ADM4_EN","ADM4_PCODE"),id = "ADM4_EN", legend.show = F)
map2
map_dist <- st_read("gadm36_BGD_shp/gadm36_BGD_2.shp")
map_dist
str(map_dist)
sunamgonj_UN <- readRDS("C:/Users/movir/Downloads/sunamgonj_UN.rds")
sunamgonj_UN <- readRDS("C:/Users/movir/Downloads/sunamgonj_UN.rds")
sunamgonj_UP <- readRDS("C:/Users/movir/Downloads/sunamgonj_UP.rds")
tm_shape(map2) + tm_polygons("ADM4_EN",id = "ADM4_EN", legend.show = F)
