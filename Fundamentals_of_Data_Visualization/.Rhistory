t
x <- sin(t)
y <- cos(t)
plot
plot(x,y)
library(ggplot2)
# Defining the number of points
points <- 500
# Defining the Golden Angle
angle <- pi * (3 - sqrt(5))
t <- (1:points) * angle
x <- sin(t)
y <- cos(t)
df <- data.frame(t, x, y)
# Make a scatter plot of points in a spiral
p <- ggplot(df, aes(x*t, y*t))
p + geom_point()
# Defining the number of points
points <- 500
# Defining the Golden Angle
angle <- pi * (3 - sqrt(5))
t <- (1:points) * angle
x <- sin(t)
y <- cos(t)
df <- data.frame(t, x, y)
# Make a scatter plot of points in a spiral
p <- ggplot(df, aes(x*t, y*t))
p + geom_point() +theme_light()
# Defining the number of points
points <- 500
# Defining the Golden Angle
angle <- pi * (3 - sqrt(5))
t <- (1:points) * angle
x <- sin(t)
y <- cos(t)
df <- data.frame(t, x, y)
# Make a scatter plot of points in a spiral
p <- ggplot(df, aes(x*t, y*t))
p + geom_point() +theme_minimal()
# Defining the number of points
points <- 500
# Defining the Golden Angle
angle <- pi * (3 - sqrt(5))
t <- (1:points) * angle
x <- sin(t)
y <- cos(t)
df <- data.frame(t, x, y)
# Make a scatter plot of points in a spiral
p <- ggplot(df, aes(x*t, y*t))
p + geom_point() +theme_dark()
HMF <- read.csv("C:/Users/movir/Downloads/HMF.csv")
View(HMF)
#Question 1
t.test(HMF$increase, conf.level = 0.9)
#Question 2
N <- length(HMF$increase)
set.seed(1234)
nboots <- 1000
boot.result <- numeric(nboots)
for(i in 1:nboots)
{
boot.samp <- sample(HMF$increase, N, replace = T)
boot.result[i] <- mean(boot.samp)
}
hist(boot.result)
boxplot(boot.result)
#Question 3
xbar <- mean(HMF$increase)
Tstar <- numeric(nboots)
for(i in 1:nboots)
{
boot.samp <- sample(HMF$increase, N, replace = T)
Tstar[i] <- mean(boot.samp)
}
quantile(Tstar, c(0.075, 0.925))
#Question 4
HMF$end <- HMF$start + HMF$increase
t.test(HMF$increase, conf.level = 0.9)
N <- length(HMF$increase)
set.seed(1234)
nboots <- 1000
boot.result <- numeric(nboots)
for(i in 1:nboots)
{
boot.samp <- sample(HMF$increase, N, replace = T)
boot.result[i] <- mean(boot.samp)
}
hist(boot.result)
boxplot(boot.result)
hist(boot.result)
prnorm
pnorm
qnorm
pt
pnorm(2)
pnorm(2227)
qnorm(2)
pnorm(0.81)
pnorm(0.81, lower.tail = F)
pnorm(0.6078, lower.tail = F)
pnorm(0.6078, lower.tail = F) * 2
pnorm(0.3039, lower.tail = F) * 2
pnorm(0.303944, lower.tail = F) * 2
pnorm(0.303944, lower.tail = F)
pnorm(1.82375, lower.tail = F) * 2
pnorm(1.82375052207, lower.tail = F) * 2
qnorm(0.98)
qnorm(0.95)
qnorm(0.05)
qnorm(0.025)
qnorm(0.01)
setwd("C:/Users/movir/Desktop/workspace/GITHUB/dataviz-experiments/Fundamentals_of_Data_Visualization")
source("_common.R")
install.packages("dviz.supp")
devtools::install_github("clauswilke/dviz.supp")
source("_common.R")
library(dviz.supp)
devtools::install_github("clauswilke/dviz.supp")
df_points <- data.frame(x = c(-1, 0, 2),
y = c(-1, 0, 1),
label = c("(–1, –1)", "(0, 0)", "(2, 1)"),
vjust = c(1.4, -.8, -.8),
hjust = c(1.1, 1.1, -.1))
df_segments <- data.frame(x0 = c(0, 2, 0, -1),
x1 = c(2, 2, -1, -1),
y0 = c(1, 0, -1, 0),
y1 = c(1, 1, -1, -1))
df_labels <- data.frame(x = c(-1, -.5, 1, 2),
y = c(-.5, -1, 1, 0.5),
vjust = c(.5, 1.3, -.3, .5),
hjust = c(1.1, .5, .5, -.1),
label = c("y = –1", "x = –1", "x = 2", "y = 1"))
ggplot(df_points, aes(x, y)) +
geom_hline(yintercept = 0, color = "gray50") +
geom_vline(xintercept = 0, color = "gray50") +
geom_segment(data = df_segments, aes(x = x0, xend = x1, y = y0, yend = y1),
linetype = 2) +
geom_point(size = 3, color = "#0072B2") +
geom_text(aes(label = label, vjust = vjust, hjust = hjust),
size = 12/.pt, family = dviz_font_family) +
geom_text(data = df_labels, aes(label = label, hjust = hjust, vjust = vjust),
size = 12/.pt, family = dviz_font_family) +
coord_fixed(xlim = c(-2.2, 3.2), ylim = c(-2.2, 2.2), expand = FALSE) +
xlab("x axis") +
ylab("y axis") +
theme_dviz_grid() +
theme(axis.ticks.length = grid::unit(0, "pt"))
library(ggplot2)
df_points <- data.frame(x = c(-1, 0, 2),
y = c(-1, 0, 1),
label = c("(–1, –1)", "(0, 0)", "(2, 1)"),
vjust = c(1.4, -.8, -.8),
hjust = c(1.1, 1.1, -.1))
df_segments <- data.frame(x0 = c(0, 2, 0, -1),
x1 = c(2, 2, -1, -1),
y0 = c(1, 0, -1, 0),
y1 = c(1, 1, -1, -1))
df_labels <- data.frame(x = c(-1, -.5, 1, 2),
y = c(-.5, -1, 1, 0.5),
vjust = c(.5, 1.3, -.3, .5),
hjust = c(1.1, .5, .5, -.1),
label = c("y = –1", "x = –1", "x = 2", "y = 1"))
ggplot(df_points, aes(x, y)) +
geom_hline(yintercept = 0, color = "gray50") +
geom_vline(xintercept = 0, color = "gray50") +
geom_segment(data = df_segments, aes(x = x0, xend = x1, y = y0, yend = y1),
linetype = 2) +
geom_point(size = 3, color = "#0072B2") +
geom_text(aes(label = label, vjust = vjust, hjust = hjust),
size = 12/.pt, family = dviz_font_family) +
geom_text(data = df_labels, aes(label = label, hjust = hjust, vjust = vjust),
size = 12/.pt, family = dviz_font_family) +
coord_fixed(xlim = c(-2.2, 3.2), ylim = c(-2.2, 2.2), expand = FALSE) +
xlab("x axis") +
ylab("y axis") +
theme_dviz_grid() +
theme(axis.ticks.length = grid::unit(0, "pt"))
library(ggrepel)
dviz_font_family <- "Myriad Pro"
df_points <- data.frame(x = c(-1, 0, 2),
y = c(-1, 0, 1),
label = c("(–1, –1)", "(0, 0)", "(2, 1)"),
vjust = c(1.4, -.8, -.8),
hjust = c(1.1, 1.1, -.1))
df_segments <- data.frame(x0 = c(0, 2, 0, -1),
x1 = c(2, 2, -1, -1),
y0 = c(1, 0, -1, 0),
y1 = c(1, 1, -1, -1))
df_labels <- data.frame(x = c(-1, -.5, 1, 2),
y = c(-.5, -1, 1, 0.5),
vjust = c(.5, 1.3, -.3, .5),
hjust = c(1.1, .5, .5, -.1),
label = c("y = –1", "x = –1", "x = 2", "y = 1"))
ggplot(df_points, aes(x, y)) +
geom_hline(yintercept = 0, color = "gray50") +
geom_vline(xintercept = 0, color = "gray50") +
geom_segment(data = df_segments, aes(x = x0, xend = x1, y = y0, yend = y1),
linetype = 2) +
geom_point(size = 3, color = "#0072B2") +
geom_text(aes(label = label, vjust = vjust, hjust = hjust),
size = 12/.pt, family = dviz_font_family) +
geom_text(data = df_labels, aes(label = label, hjust = hjust, vjust = vjust),
size = 12/.pt, family = dviz_font_family) +
coord_fixed(xlim = c(-2.2, 3.2), ylim = c(-2.2, 2.2), expand = FALSE) +
xlab("x axis") +
ylab("y axis") +
theme_dviz_grid() +
theme(axis.ticks.length = grid::unit(0, "pt"))
theme_dviz_grid <- function(font_size = 14, font_family = dviz_font_family, line_size = .5,
rel_small = 12/14, rel_tiny = 11/14, rel_large = 16/14,
colour = "grey90") {
half_line <- font_size / 2
cowplot::theme_minimal_grid(font_size = font_size, font_family = font_family, line_size = line_size,
rel_small = rel_small, rel_tiny = rel_tiny, rel_large = rel_large,
colour = colour)  %+replace%
theme(
plot.margin = margin(half_line/2, 1.5, half_line/2, 1.5),
complete = TRUE
)
}
df_points <- data.frame(x = c(-1, 0, 2),
y = c(-1, 0, 1),
label = c("(–1, –1)", "(0, 0)", "(2, 1)"),
vjust = c(1.4, -.8, -.8),
hjust = c(1.1, 1.1, -.1))
df_segments <- data.frame(x0 = c(0, 2, 0, -1),
x1 = c(2, 2, -1, -1),
y0 = c(1, 0, -1, 0),
y1 = c(1, 1, -1, -1))
df_labels <- data.frame(x = c(-1, -.5, 1, 2),
y = c(-.5, -1, 1, 0.5),
vjust = c(.5, 1.3, -.3, .5),
hjust = c(1.1, .5, .5, -.1),
label = c("y = –1", "x = –1", "x = 2", "y = 1"))
ggplot(df_points, aes(x, y)) +
geom_hline(yintercept = 0, color = "gray50") +
geom_vline(xintercept = 0, color = "gray50") +
geom_segment(data = df_segments, aes(x = x0, xend = x1, y = y0, yend = y1),
linetype = 2) +
geom_point(size = 3, color = "#0072B2") +
geom_text(aes(label = label, vjust = vjust, hjust = hjust),
size = 12/.pt, family = dviz_font_family) +
geom_text(data = df_labels, aes(label = label, hjust = hjust, vjust = vjust),
size = 12/.pt, family = dviz_font_family) +
coord_fixed(xlim = c(-2.2, 3.2), ylim = c(-2.2, 2.2), expand = FALSE) +
xlab("x axis") +
ylab("y axis") +
theme_dviz_grid() +
theme(axis.ticks.length = grid::unit(0, "pt"))
df_points <- data.frame(x = c(-1, 0, 2),
y = c(-1, 0, 1),
label = c("(–1, –1)", "(0, 0)", "(2, 1)"),
vjust = c(1.4, -.8, -.8),
hjust = c(1.1, 1.1, -.1))
df_segments <- data.frame(x0 = c(0, 2, 0, -1),
x1 = c(2, 2, -1, -1),
y0 = c(1, 0, -1, 0),
y1 = c(1, 1, -1, -1))
df_labels <- data.frame(x = c(-1, -.5, 1, 2),
y = c(-.5, -1, 1, 0.5),
vjust = c(.5, 1.3, -.3, .5),
hjust = c(1.1, .5, .5, -.1),
label = c("y = –1", "x = –1", "x = 2", "y = 1"))
ggplot(df_points, aes(x, y)) +
geom_hline(yintercept = 0, color = "red") +
geom_vline(xintercept = 0, color = "gray50") +
geom_segment(data = df_segments, aes(x = x0, xend = x1, y = y0, yend = y1),
linetype = 2) +
geom_point(size = 3, color = "#0072B2") +
geom_text(aes(label = label, vjust = vjust, hjust = hjust),
size = 12/.pt, family = dviz_font_family) +
geom_text(data = df_labels, aes(label = label, hjust = hjust, vjust = vjust),
size = 12/.pt, family = dviz_font_family) +
coord_fixed(xlim = c(-2.2, 3.2), ylim = c(-2.2, 2.2), expand = FALSE) +
xlab("x axis") +
ylab("y axis") +
theme_dviz_grid() +
theme(axis.ticks.length = grid::unit(0, "pt"))
df_points <- data.frame(x = c(-1, 0, 2),
y = c(-1, 0, 1),
label = c("(–1, –1)", "(0, 0)", "(2, 1)"),
vjust = c(1.4, -.8, -.8),
hjust = c(1.1, 1.1, -.1))
df_segments <- data.frame(x0 = c(0, 2, 0, -1),
x1 = c(2, 2, -1, -1),
y0 = c(1, 0, -1, 0),
y1 = c(1, 1, -1, -1))
df_labels <- data.frame(x = c(-1, -.5, 1, 2),
y = c(-.5, -1, 1, 0.5),
vjust = c(.5, 1.3, -.3, .5),
hjust = c(1.1, .5, .5, -.1),
label = c("y = –1", "x = –1", "x = 2", "y = 1"))
ggplot(df_points, aes(x, y)) +
geom_hline(yintercept = 0, color = "gray50") +
geom_vline(xintercept = 0, color = "gray50") +
geom_segment(data = df_segments, aes(x = x0, xend = x1, y = y0, yend = y1),
linetype = 2) +
geom_point(size = 3, color = "#0072B2") +
geom_text(aes(label = label, vjust = vjust, hjust = hjust),
size = 12/.pt, family = dviz_font_family) +
geom_text(data = df_labels, aes(label = label, hjust = hjust, vjust = vjust),
size = 12/.pt, family = dviz_font_family) +
coord_fixed(xlim = c(-2.2, 3.2), ylim = c(-2.2, 2.2), expand = FALSE) +
xlab("x axis") +
ylab("y axis") +
theme_dviz_grid() +
theme(axis.ticks.length = grid::unit(0, "pt"))
scale_alpha()
scale_color_hue()
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_OkabeIto() + ggtitle("Okabe Ito") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p2 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_brewer(type = "qual", palette = "Dark2") + ggtitle("ColorBrewer Dark2") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p3 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_hue() + ggtitle("ggplot2 hue") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
plot_grid(p1, p2, p3, ncol = 1)
gg_color_swatches
library(sf)
plot_grid
plot_grid <- function(..., label_fontfamily = dviz_font_family,
label_fontface = "plain", hjust = 0, vjust = 1) {
cowplot::plot_grid(..., label_fontfamily = label_fontfamily,
label_fontface = label_fontface,
hjust = hjust, vjust = vjust)
}
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_OkabeIto() + ggtitle("Okabe Ito") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p2 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_brewer(type = "qual", palette = "Dark2") + ggtitle("ColorBrewer Dark2") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p3 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_hue() + ggtitle("ggplot2 hue") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
plot_grid(p1, p2, p3, ncol = 1)
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_OkabeIto() + ggtitle("Okabe Ito") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
###############- font
dviz_font_family <- "Myriad Pro"
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_OkabeIto() + ggtitle("Okabe Ito") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
remotes::install_github("wilkelab/cowplot")
gg_color_swatches(n = n, ...) +
scale_fill_manual(values=colors) +
geom_text(data=tiles[tiles$light & color_labels,], aes(x, y, label=color), color="black",
size=label_size, family = label_family) +
geom_text(data=tiles[!tiles$light & color_labels,], aes(x, y, label=color), color="white",
size=label_size, family = label_family)
}
gg_color_swatches <- function(n = 10, xmargin = 0.2, ymargin = 0,
title = NULL, title_size = 14, title_family = "", title_face = "plain",
plot_margin = margin(title_size/2, title_size/2, title_size/2, title_size/2))
{
tiles <- data.frame(xmin=(0:(n-1)+xmargin/2)/n,
xmax=((1:n)-xmargin/2)/n,
ymin=rep(0, n)+ymargin/2,
ymax=rep(1, n)-ymargin/2,
fill=factor(1:n))
# code to appease CRAN check
xmax <- xmin <- ymax <- ymin <- fill <- NULL
ggplot() +
geom_rect(data=tiles, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, fill=fill)) +
scale_x_continuous(limits = c(.99*xmargin/(2*n), 1-.99*xmargin/(2*n)), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 1), expand = c(0, 0)) +
ggtitle(title) +
cowplot::theme_nothing() +
theme(plot.margin = plot_margin,
plot.title = element_text(family = title_family,
face = title_face,
size = title_size,
margin = margin(b = title_size/2),
hjust = 0, vjust = 0.5))
}
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_OkabeIto() + ggtitle("Okabe Ito") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p2 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_brewer(type = "qual", palette = "Dark2") + ggtitle("ColorBrewer Dark2") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p3 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_hue() + ggtitle("ggplot2 hue") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
plot_grid(p1, p2, p3, ncol = 1)
library(cowplot)
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_OkabeIto() + ggtitle("Okabe Ito") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
remotes::install_github("clauswilke/colorblindr")
library(colorblindr)
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_OkabeIto() + ggtitle("Okabe Ito") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p2 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_brewer(type = "qual", palette = "Dark2") + ggtitle("ColorBrewer Dark2") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p3 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_hue() + ggtitle("ggplot2 hue") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
plot_grid(p1, p2, p3, ncol = 1)
barplot(c(1:7))
barplot(c(1:7))
barplot(c(1:7),col =  c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000"))
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_OkabeIto() + ggtitle("Okabe Ito") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p2 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_brewer(type = "qual", palette = "Dark2") + ggtitle("ColorBrewer Dark2") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p3 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_hue() + ggtitle("ggplot2 hue") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
plot_grid(p1, p2, p3, ncol = 1)
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_brewer(type = "seq", palette = "Blues", direction = -1) + ggtitle("ColorBrewer Blues") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p2 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_discrete_sequential("Heat", rev = FALSE) + ggtitle("Heat") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p3 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_viridis_d() + ggtitle("Viridis") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
plot_grid(p1, p2, p3, ncol = 1)
scale_fill_brewer(palette = "reds")
scale_fill_brewer(palette = "Reds")
scale_fill_discrete_sequential()
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_discrete_divergingx(palette = "Earth") + ggtitle("CARTO Earth") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p2 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_brewer(type = "div", palette = "PiYG") + ggtitle("ColorBrewer PiYG") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p3 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_discrete_diverging("Blue-Red") + ggtitle("Blue-Red") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
plot_grid(p1, p2, p3, ncol = 1)
p1 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_manual(values = accent_OkabeIto) + ggtitle("Okabe Ito Accent") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p2 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_manual(values = c("gray60", "gray70","gray80", "gray90", "#C95C4F",   '#83A121', '#6B8AD5')) + ggtitle("Grays with accents") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
p3 <- gg_color_swatches(7, title_family = dviz_font_family) +
scale_fill_brewer(type = "qual", palette = "Accent") + ggtitle("ColorBrewer Accent") +
theme(plot.margin = margin(7, 1.5, 7, 1.5))
plot_grid(p1, p2, p3, ncol = 1)
texas_crs <- "+proj=aea +lat_1=27.5 +lat_2=35 +lat_0=18 +lon_0=-100 +x_0=1500000 +y_0=6000000 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"
# -110, -93.5 transformed using texas_crs
texas_xlim <- c(558298.7, 2112587)
texas_income %>% st_transform(crs = texas_crs) %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = "white") +
coord_sf(xlim = texas_xlim, datum = NA) +
theme_dviz_map() +
scale_fill_distiller(
palette = "Blues", type = 'seq', na.value = "grey60", direction = 1,
name = "annual median income (USD)",
limits = c(18000, 90000),
breaks = 20000*c(1:4),
labels = c("$20,000", "$40,000", "$60,000", "$80,000"),
guide = guide_colorbar(
direction = "horizontal",
label.position = "bottom",
title.position = "top",
ticks = FALSE,
barwidth = grid::unit(3.0, "in"),
barheight = grid::unit(0.2, "in")
)
) +
theme(
legend.title.align = 0.5,
legend.text.align = 0.5,
legend.justification = c(0, 0),
legend.position = c(0.02, 0.1)
)
remotes::install_github("clauswilke/dviz.supp")
install.packages("plotly")
library(dviz.supp)
##### example map sequential
texas_crs <- "+proj=aea +lat_1=27.5 +lat_2=35 +lat_0=18 +lon_0=-100 +x_0=1500000 +y_0=6000000 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"
# -110, -93.5 transformed using texas_crs
texas_xlim <- c(558298.7, 2112587)
texas_income %>% st_transform(crs = texas_crs) %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = "white") +
coord_sf(xlim = texas_xlim, datum = NA) +
theme_dviz_map() +
scale_fill_distiller(
palette = "Blues", type = 'seq', na.value = "grey60", direction = 1,
name = "annual median income (USD)",
limits = c(18000, 90000),
breaks = 20000*c(1:4),
labels = c("$20,000", "$40,000", "$60,000", "$80,000"),
guide = guide_colorbar(
direction = "horizontal",
label.position = "bottom",
title.position = "top",
ticks = FALSE,
barwidth = grid::unit(3.0, "in"),
barheight = grid::unit(0.2, "in")
)
) +
theme(
legend.title.align = 0.5,
legend.text.align = 0.5,
legend.justification = c(0, 0),
legend.position = c(0.02, 0.1)
)
